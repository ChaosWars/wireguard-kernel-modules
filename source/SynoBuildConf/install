#!/bin/bash
### Use PKG_DIR as working directory.
PKG_DIR=/tmp/_${PACKAGE_NAME}
echo "Removing $PKG_DIR"
rm -rf $PKG_DIR
echo "Creating $PKG_DIR"
mkdir -p $PKG_DIR
chown -R $SUDO_UID:$SUDO_GID $PKG_DIR

### get spk packing functions
source /${PKGSCRIPTSDIR}/include/pkg_util.sh

create_package_tgz() {
	local package_tgz_dir=/tmp/_${PACKAGE_NAME}_package_tgz
	echo "Removing $package_tgz_dir"
	rm -rf $package_tgz_dir

	local package_destdir=$PKG_DIR/usr/lib/modules
	echo "Creating $package_destdir"
	mkdir -p $package_destdir

	make install DESTDIR="$package_destdir"
	chown -R $SUDO_UID:$SUDO_GID $package_tgz_dir
	chmod 444 $package_destdir/*.ko

	pkg_make_package $package_tgz_dir "${PKG_DIR}"
}

create_spk(){
	mkdir -p $PKG_DIR/conf
	mkdir -p $PKG_DIR/scripts

	cp -av conf/* $PKG_DIR/conf
	cp -av scripts/* $PKG_DIR/scripts
	cp -av PACKAGE_ICON*.PNG $PKG_DIR
	cp -av LICENSE $PKG_DIR

	### Generate INFO file
	./INFO.sh > INFO
	cp -av INFO $PKG_DIR/INFO

	chown -R $SUDO_UID:$SUDO_GID $PKG_DIR

	### Create the final spk.
	# pkg_make_spk <source path> <dest path> <spk file name>
	# Please put the result spk into /image/packages
	# spk name functions: pkg_get_spk_name pkg_get_spk_unified_name pkg_get_spk_family_name
	mkdir -p /image/packages
	pkg_make_spk ${PKG_DIR} "/image/packages" $(pkg_get_spk_name)
}

main() {
	create_package_tgz
	create_spk
}

main "$@"
